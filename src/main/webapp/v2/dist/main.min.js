/*! 17-01-2014 */
var EbelleApp=angular.module("EbelleApp",["ngResource","ngRoute","br","ui.select2","ui.date","$strap.directives"]);EbelleApp.controller("App",["$resource","$route","$routeParams","$location","$scope","$http","$strapConfig",function(a,b,c,d,e,f,g){Util.getLocalDataSource("json/app.json",f,function(a){e.app=a}),g.timepicker={showSeconds:!1,showMeridian:!1}}]),EbelleApp.config(["$routeProvider",function(a){a.when("",{templateUrl:"/form.html"}).when("/user",{templateUrl:"pages/user/main.html"}).otherwise({redirectTo:"/user"})}]),EbelleApp.filter("column_filter",function(){return function(a,b){var c=null;return c="weekday"===b?Util.weekDayFilter(a):"boolean"===b?Util.booleanFilter(a):a}}),EbelleApp.directive("ebSelect",[function(){return{scope:!0,require:"ngModel",link:function(a,b,c){DataManager.getSelectDataSource(c.url,function(b){a.items=b,a.$apply()})}}}]);var WorkhourControllerExtended={save:function(a,b){var c=null;a.days.forEach(function(b){var d=angular.copy(a);d.day=b,c=null===c?d.$save():c.then(function(){d.$save()})}),c&&c.then(function(){b(null)})},edit:function(a,b,c){a.days=[a.day],c(a)}},UserActivityControllerExtended={applayPercernt:function(a){return function(b){a.list.forEach(function(a){a.commission=b,a._changed=!0})}},findByCategory:function(a,b,c){return function(b){a.list=c.findByCategory({category:b})}},saveChanged:function(a){return function(){var b=null;a.list.filter(function(a){return a._changed}).forEach(function(a){a=angular.copy(a),b=null===b?a.$save():b.then(function(){a.$save()})}),b&&b.then(function(){alert("Salvo com sucesso!"),b=null})}}},WorkhourController=CrudFactory({name:"WorkhourController",userGridAction:!0,columns:[{name:"day",label:"Dia",filter:"weekday"},{name:"start",label:"Inicio",icon:"icon-time"},{name:"end",label:"Fim",icon:"icon-time"},{name:"startLanch",label:"Inicio Almoço",icon:"icon-time"},{name:"endLanch",label:"Fim Almoço",icon:"icon-time"}],url:"/api/workhour",collectionUrl:"/api/user/workhour/:user/:id",collectionParams:{user:function(){return parseInt(Util.getUrlParameter("id"),10)},id:"@id"},extend:WorkhourControllerExtended}),UserActivityController=CrudFactory({name:"UserActivityController",userGridAction:!1,columns:[{name:"enabled",label:"Faz?",editable:!0,template:"checkbox.html"},{name:"name",label:"Serviço"},{name:"duration",label:"Duração",icon:"icon-time",editable:!0,template:"time.html"},{name:"price",label:"Preço",icon:"icon-money",editable:!0,template:"money.html"},{name:"commission",label:"Comissão",editable:!0,template:"percent.html"}],url:"/api/useractivity",collectionUrl:"/api/user/useractivity/:user/:id",collectionParams:{user:function(){return parseInt(Util.getUrlParameter("id"),10)},id:"@id",activityType:"@activityType"},actions:{findByCategory:{method:"GET",isArray:!0,action:"findByCategory",url:"/api/user/useractivity_by_category/:user/:category",transformResponse:function(a){return Util.jsonParse(a)}}},extend:UserActivityControllerExtended}),UserControllerExtended={save:function(a,b){a.groupPermission=a.groupPermissionText.join(","),b(a,function(){alert("Salvo com sucesso!")})}},UserController=CrudFactory({useRouteParameter:!0,name:"UserController",columns:[],url:"/api/v2/user",userGridAction:!0,extend:UserControllerExtended,onSelectObj:function(a){var b=function(){a.groupPermissionText=a.groupPermission.split(",")};a.$promise?a.$promise.then(function(){b()}):b()}});