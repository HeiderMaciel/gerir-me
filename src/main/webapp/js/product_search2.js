// Generated by CoffeeScript 1.6.3
(function () {
  var ProductSearch2, icon_tag2, page_html, updateInventory2;
  var parent_product_2search2 = null;
  
  icon_tag2 = '<a href="#"><img src="/images/search.png" width="16" class="product_2search2"></a>';

  page_html2 =
    "<div class=\"modal hide fade product_2search2_popup2\" id=\"product_2search2_popup2\">\n    <div class=\"modal-header\">\n            <a class=\"close\" href=\"#\">×</a>\n          <h3>Buscar de Produtos</h3>\n    </div>\n    <div class=\"modal-body \">\n    <form>\n          <div class=\"well\">\n            <input value=\"Buscar\" type=\"button\" class=\"btn success product_searh_send2\">\n          </div>    \n            <span>\n              <div class=\"clearfix\">\n                <label for=\"name\">Codigo</label>\n                 <div class=\"input\">\n                    <input class=\"medium product_2search2_id2\" size=\"30\" type=\"text\" value=\"\">\n                    <span class=\"help-block\">Codigo do Produto</span>\n                 </div>\n              </div>            \n              <div class=\"clearfix\">\n                <label for=\"name\">Nome</label>\n                 <div class=\"input\">\n                    <input class=\"medium product_2search2_name2\" size=\"30\" type=\"text\" value=\"\">\n                    <span class=\"help-block\">Nome completo</span>\n                 </div>\n              </div>\n              <div class=\"clearfix\">\n                <label for=\"name\">Codigo Externo</label>\n                 <div class=\"input\">\n                    <input class=\"medium external_id\" size=\"30\" type=\"text\"/>\n                    <span class=\"help-block\">Codigo para busca simplificada</span>\n                 </div>\n              </div>               \n            </span>\n        </form> \n        <table class=\"zebra-striped\" id=\"table_product_2search2\">\n        </table>    \n   </div>\n   <div class=\"modal-footer\">\n   </div>\n</div>";

  ProductSearch2 = (function () {
    function ProductSearch2() {}

    return ProductSearch2;

  })();

  ProductSearch2.selectProductListeners = [];

  window.ProductSearch2 = ProductSearch2;

  ProductSearch2.selectAutoCompleteName = function (product, defOption) {
    ProductSearch2.selectSearchProduct(product, product.name, true, defOption);
    return product.name;
  };

  ProductSearch2.updatePrice = function () {
    if (ProductSearch2.selectedProduct) {
      return ProductSearch2.selectSearchProduct(ProductSearch2.selectedProduct, true, {});
    }
  };

  ProductSearch2.selectSearchProduct = function (product, call_change, defOption) {
    ProductSearch2.selectedProduct = product;
    $("#product_2search2_popup2").modal("hide");
    $(window.current_product_2search2_input).val(product.id);
    if (defOption.userThuch) {
      $(".select2-container span", window.current_product_2search2).html(product.name);
    }
    $(".name_product_2search2", window.current_product_2search2).val(product.name);
    updateInventory2(defOption, product.id, call_change);
    if (call_change) {
      $(window.current_product_2search2_input).change();
    }
    return ProductSearch2.selectProductListeners.map(function (listener) {
      return listener(product);
    });
  };

  updateInventory2 = function (defOption, id) {
    var unit;
    if (defOption.updateInventory2) {
      if (!defOption.allUnits) {
        if (defOption.unitField) {
          unit = $(defOption.unitField).val();
        } else {
          unit = 0;
        }
        return $.get("/inventory/currentstock/" + id + "/" + unit, function (ret) {
          return $(".inventory_product_2search2").val(ret);
        });
      } else {
        return $.get("/inventory/currentstock/" + id, function (ret) {
          var content;
          eval("var data = " + ret);
          content = data.filter(function (item) {
            return item.amount > 0;
          }).map(function (item) {
            return "<tr><td>" + item.name + "</td><td>" + item.amount + "</td></tr>";
          });
          return $(".inventory_product_2search2").html("<table class='bordered-table zebra-striped'>" + content.join('') + "</table>");
        });
      }
    }
  };

  jQuery.fn.productSearch2 = function (option) {
    var $field, bindPopup, defOption, searchInServer;
    $field = this;
    defOption = {
      createName: true,
      iconElement: false,
      updateInventory2: true,
      unitField: false,
      allUnits: false,
      userThuch: false,
      userFieldSelector: true
    };
    if (!option) {
      option = {};
    }
    $.extend(defOption, option);
    searchInServer = function (id, name, external_id, barcode, call_change) {
      var user;
      user = option.userFieldSelector ? $(option.userFieldSelector).val() : 0;
      return $.post("/product/product_search", {
        id: id,
        name: name,
        external_id: external_id,
        user: user,
        barcode: barcode
      }, function (r) {
        var obj, table, _i, _len;
        eval("var ret=" + r);
        table = "";
        if (ret.length > 0 && id !== "") {
          obj = ret[0];
          return ProductSearch2.selectSearchProduct(obj, call_change, defOption);
        } else {
          for (_i = 0, _len = ret.length; _i < _len; _i++) {
            obj = ret[_i];
            table += "<tr><td>" + obj.id + "</td><td>" + obj.name + "</td><td><a class='product_2search2_selector2' data-id='" + obj.id + "' data-obj='" +
              (JSON.stringify(obj)) + "' data-name='" + obj.name + "' ><img src='/images/select.png' width='20'/></a></td></tr>";
          }
          $("#table_product_2search2").html(table);
          return $('.product_2search2_selector2').click(function () {
            return ProductSearch2.selectSearchProduct($(this).data("obj"), true, defOption);
          });
        }
      });
    };
    bindPopup = function () {
      if ($("#product_2search2_popup2").length <= 0) {
        $("body").append(page_html2);
        $(".product_searh_send2").click(function () {
          return searchInServer($(".product_2search2_id2").val(), $(".product_2search2_name2").val(), $('.external_id').val(), $('.barcode').val(), true);
        });
        return $("#product_2search2_popup2 input").keydown(function (e) {
          if (e.keyCode === 13) {
            return searchInServer($(".product_2search2_id2").val(), $(".product_2search2_name2").val(), $('.external_id').val(), $('.barcode').val(), true);
          }
        });
      }
    };
    if (defOption.unitField) {
      $(defOption.unitField).change(function () {
        return updateInventory2(defOption, $($field).val());
      });
    }
    this.change(function () {
      return searchInServer($(this).val(), "", "", false);
    });
    this.each(function () {
      var $parent, $product_search;
      bindPopup();
      $parent = $(this).parent();
      window.current_product_2search2 = $parent;
      window.current_product_2search2_input = this;
      if (!defOption.iconElement) {
        $parent.prepend(icon_tag2);
      } else {
        $(defOption.iconElement, $parent).prepend(icon_tag2);
      }
      if (defOption.createName) {
        $parent.append('<input class="span3 disabled name_product_2search2" size="30" type="text" placeholder="Nome" disabled="">');
      }
      $product_search = $(".product_2search2", $parent);
      return $product_search.click(function () {
        $("#product_2search2_popup2").modal({
          "backdrop": true,
          'keyboard': true,
          'show': true
        });
        return setTimeout(function () {
          return $(".product_2search2_name2").focus();
        }, 200);
      });
    });
    if (option.userThuch) {
      return this.each(function () {
        var field;
        $(this).data("prevalue", $(this).val());
        field = this;
        return $(this).select2({
          placeholder: "Digite o nome ou código do produto",
          minimumInputLength: 1,
          formatNoMatches: function (val) {
            return "Nenhum resultado";
          },
          id: function (a) {
            return a.name;
          },
          ajax: {
            url: "/product/product_search",
            dataType: 'text',
            quietMillis: 300,
            data: function (term, page) {
              var user;
              user = option.userFieldSelector ? $(option.userFieldSelector).val() : 0;
              return {
                name: term,
                page: page - 1,
                external_id: term,
                barcode: term,
                user: user
              };
            },
            results: function (data, page) {
              var parent_product_2search2;
              eval('data=' + data);
              parent_product_2search2 = $(field).parent();
              return {
                results: data,
                more: data.length === 30
              };
            }
          },
          formatResult: function (product) {
            if (product.brandname != '') {
              return product.name + " - " + product.brandname;
            } else {
              return product.name
            }
          },
          formatSelection: function (a) {
            $('.id_product', parent_product_2search2).val(a.id).change();
            return ProductSearch2.selectAutoCompleteName(a, option);
          },
          dropdownCssClass: "bigdrop",
          escapeMarkup: function (m) {
            return m;
          }
        });
      });
    }
  };

}).call(this);
